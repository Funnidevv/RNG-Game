const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = 3000;
const SECRET_KEY = '114786D3V';

app.use(cors());
app.use(bodyParser.json());
app.use(express.static('public'));

let data = JSON.parse(fs.readFileSync('data.json', 'utf8'));

function saveData() {
  fs.writeFileSync('data.json', JSON.stringify(data));
}

function checkDevKey(req, res, next) {
  if (req.headers['dev-key'] !== SECRET_KEY) {
    return res.status(403).send("Forbidden");
  }
  next();
}

app.get('/api/data', (req, res) => {
  res.json(data);
});

app.post('/api/register', (req, res) => {
  const name = req.body.name.trim();
  if (!name || data.leaderboard[name]) {
    return res.status(400).send("Name is taken or invalid");
  }
  data.currentUser = name;
  data.leaderboard[name] = { aura: 'None', points: 0, auras: [] };
  saveData();
  res.json({ status: 'ok', user: data.leaderboard[name] });
});

// Dev routes
app.post('/api/dev/delete', checkDevKey, (req, res) => {
  const name = req.body.name;
  if (data.leaderboard[name]) {
    delete data.leaderboard[name];
    saveData();
    res.send(`${name} deleted`);
  } else res.status(404).send("Player not found");
});

// (Add reset, infinite, giveAura as in previous message)

// Fallback to index.html for non-API routes
app.get('*', (req, res) => {
  res.sendFile(path.resolve(__dirname, 'public', 'index.html'));
});

app.listen(PORT, () => console.log(`Server running at http://localhost:${PORT}`));
